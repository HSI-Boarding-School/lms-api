basePath: /
definitions:
  auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  auth.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is the authentication API documentation for Shiners project.
  title: Shiners API Documentation
  version: "1.0"
paths:
  /api/auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Generate reset token and send it to user's email
      parameters:
      - description: Email Request
        in: body
        name: request
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Request password reset
      tags:
      - Auth
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Login user
      tags:
      - Auth
  /api/auth/logout:
    post:
      consumes:
      - application/json
      description: Invalidate user token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Logout user
      tags:
      - Auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: Register Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - Auth
  /api/auth/reset-password:
    post:
      consumes:
      - application/json
      description: Reset password using valid reset token
      parameters:
      - description: Reset Password Request
        in: body
        name: request
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Reset user password
      tags:
      - Auth
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
